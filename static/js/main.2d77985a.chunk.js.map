{"version":3,"sources":["assets/desktop/icon-sun.svg","assets/desktop/icon-moon.svg","components/Header.js","assets/desktop/icon-search.svg","assets/desktop/icon-location.svg","assets/mobile/icon-filter.svg","components/Button.js","components/SearchBar.js","components/JobCard.js","components/utils/time.js","components/skeletons/SkeletonElement.js","components/skeletons/SkeletonHome.js","pages/Home.js","components/skeletons/skeletonJob.js","pages/Job.js","App.js","index.js"],"names":["Header","darkMode","setDarkMode","htmlTag","document","body","parentElement","useEffect","localStorage","getItem","setAttribute","setItem","className","src","Sun","alt","onClick","Moon","Button","children","clic","typeBtn","css","type","SearchBar","description","location","fullTime","finalSearch","setDescription","setLocation","setFullTime","isTabletOrMobil","useMediaQuery","query","isMobil","useState","openModal","setOpenModal","iconSearch","placeholder","value","onChange","e","target","iconLocation","htmlFor","name","id","checked","hidden","iconFilter","window","addEventListener","event","tagName","preventDefault","scrollTo","style","marginLeft","overflowY","JobCard","props","zIndex","logo","onLoad","created","margin","to","title","company","time","now","previous","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","Math","round","SkeletonElement","typeLoader","classes","SkeletonHome","Home","data","setData","loading","setLoading","setError","anotherPage","setAnotherPage","final","setFinal","URL_BASE","URL_FILTER","jobs","axios","get","then","res","forEach","job","push","console","log","catch","error","findIndex","j","handleResetFilter","map","company_logo","Date","parse","created_at","n","SkeletonJob","Job","setJob","params","match","company_url","href","rel","dangerouslySetInnerHTML","__html","how_to_apply","App","basename","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2d77985a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-sun.9422c153.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.038e80ca.svg\";","import React, { useEffect }  from 'react';\r\nimport Sun from '../assets/desktop/icon-sun.svg';\r\nimport Moon from '../assets/desktop/icon-moon.svg';\r\n\r\nconst Header = ( {  darkMode, setDarkMode}) => {\r\n\r\n    const htmlTag = document.body.parentElement;\r\n   \r\n    useEffect(() => {\r\n        if (!localStorage.getItem('theme')) {  // Renvoie la valeur associée à la clé passée en paramètre. Ici, si il n'y a pas de value, alors ...\r\n            setDarkMode(true)\r\n            localStorage.setItem('theme', 'light') // Ajoute nouveau stockage, ou modifie si existe déjà : key = theme, value = light\r\n            htmlTag.setAttribute('data-theme', 'light')\r\n        } else {\r\n            htmlTag.setAttribute('data-theme', localStorage.getItem('theme'))\r\n        }\r\n    }, [])\r\n    \r\n    const switchTheme = () => {\r\n        if (!darkMode) {\r\n            localStorage.setItem('theme', 'light')\r\n            htmlTag.setAttribute('data-theme', localStorage.getItem('theme'))\r\n            setDarkMode(true)\r\n        } else {\r\n            localStorage.setItem('theme', 'dark')\r\n            htmlTag.setAttribute('data-theme', localStorage.getItem('theme'))\r\n            setDarkMode(false)\r\n        }\r\n    }\r\n   \r\n\r\n    return (\r\n        <>\r\n            <div className=\"header\" >\r\n                <p className=\"header__title\">devjobs</p>\r\n                <div className=\"header__toggle\">\r\n                    <img src={Sun} alt=\"Sun\" />\r\n                    <button\r\n                        className={`header__toggle__btn ${!darkMode ? 'active' : ''}`}\r\n                        onClick={() => switchTheme()}\r\n                    >\r\n                        <span className=\"slider\" />\r\n                    </button>\r\n                    <span>\r\n                        <img src={Moon} alt=\"Moon\" />\r\n                    </span>\r\n                </div>\r\n                </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/icon-search.09900c2e.svg\";","export default __webpack_public_path__ + \"static/media/icon-location.325ff3d9.svg\";","export default __webpack_public_path__ + \"static/media/icon-filter.2471816d.svg\";","import React from 'react';\r\n\r\nconst Button = ( {children, clic, typeBtn }) => {\r\n\r\n    const css = `button ${typeBtn}`;\r\n\r\n    return (\r\n        <>\r\n            <button type=\"submit\" className={css} onClick={clic}>{children}</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Button;","import React,{ useState } from 'react';\r\nimport iconSearch from '../assets/desktop/icon-search.svg';\r\nimport iconLocation from '../assets/desktop/icon-location.svg';\r\nimport iconFilter from '../assets/mobile/icon-filter.svg';\r\nimport Button from '../components/Button';\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nconst SearchBar = ( {description, location, fullTime, finalSearch, setDescription, setLocation, setFullTime }) => {\r\n\r\n    // == location and fullTime none\r\n    const isTabletOrMobil = useMediaQuery({ query: '(max-width: 1110px)' });\r\n    const isMobil = useMediaQuery({ query: '(max-width: 689px)' });\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    const preventMotion = (e) => {\r\n        window.scrollTo(0,0);\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n    const handleShowFilter = () => {\r\n        setOpenModal(true);\r\n        // document.body.parentNode.style.overflow = 'hidden';\r\n        // window.addEventListener(\"touchmove\", preventMotion, false);      \r\n        // document.body.style.position = \"fixed\";\r\n        // document.body.style.overflowY = \"hidden\";\r\n        window.addEventListener(\"touchstart\", function(event){\r\n            if(event.target.tagName == \"HTML\" || event.target.tagName == \"BODY\"){\r\n                    event.preventDefault();\r\n            }\r\n\r\n            window.addEventListener(\"scroll\",function(){\r\n                window.scrollTo(0,0)\r\n            },false)\r\n} ,false);\r\n    \r\n}\r\n\r\n    const finalSearchMobilClose = (e) => {\r\n        finalSearch(e);\r\n        setOpenModal(false);\r\n        document.body.style.overflowY = 'initial';\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"searchBar\">\r\n            <div className=\"searchBar__description\">\r\n                {isMobil ? null : <img src={iconSearch} onClick={finalSearch}  alt=\"icon Search\"/>}\r\n                <input \r\n                    type=\"text\"  \r\n                    placeholder={isTabletOrMobil ? \"Filter by title ...\" : \"Filter by title, companies, expertise ...\"}\r\n                    value={description} \r\n                    onChange={(e) => setDescription(e.target.value)} \r\n                />\r\n            </div>\r\n            <div className=\"searchBar__location\">\r\n                <img src={iconLocation} alt=\"icon Location\"/>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Filter by location ...\"  \r\n                    value={location} \r\n                    onChange={(e) => setLocation(e.target.value)} \r\n                />\r\n            </div>\r\n            <div className=\"searchBar__fullTime\">\r\n              \r\n                <label htmlFor=\"fullTime\" name=\"fullTime\">\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        id=\"fullTime\" \r\n                        checked={fullTime} \r\n                        onChange={(e) => setFullTime(e.target.checked)}  \r\n                        hidden\r\n                    />\r\n                        <div></div>\r\n                        <span>{isTabletOrMobil ? \"Full Time\" : \"Full Time Only\"}</span>\r\n                </label>\r\n                {\r\n                    isMobil ? \r\n                    <>\r\n                        <img id=\"img__modal\"  src={iconFilter} alt=\"icon filter\" onClick={handleShowFilter} />\r\n                        <img src={iconSearch} style={{marginLeft : '1.5rem'}} onClick={finalSearch}  alt=\"icon Search\"/>\r\n                    </>\r\n\r\n                    : <Button clic={finalSearch} typeBtn=\"search\">Search</Button> \r\n                }\r\n            </div>\r\n           \r\n            \r\n        </div>\r\n        {\r\n            (openModal && isMobil) && (\r\n                <div className=\"show__filter\">\r\n                    <div className=\"filter__content\">\r\n                        <div className=\"filter__location\">\r\n                            <img src={iconLocation} alt=\"icon Location\"/>\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Filter by location ...\"  \r\n                                value={location} \r\n                                onChange={(e) => setLocation(e.target.value)} \r\n                            />\r\n                        </div>\r\n                        <div className=\"filter__fullTime\">\r\n                            <label htmlFor=\"fullTime\" name=\"fullTime\">\r\n                                <input \r\n                                    type=\"checkbox\" \r\n                                    id=\"fullTime\" \r\n                                    checked={fullTime} \r\n                                    onChange={(e) => setFullTime(e.target.checked)}  \r\n                                    hidden\r\n                                />\r\n                                <div></div>\r\n                                <span>Full Time Only</span>\r\n                            </label>\r\n                        </div>\r\n                        <Button clic={finalSearchMobilClose} typeBtn=\"searchMobil\">Search</Button> \r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst JobCard = (props) => {\r\n   \r\n    // const loading = <div>loding</div>\r\n    \r\n    const [loading, setLoading] = useState([])\r\n   \r\n    const handleImageLoaded = () => {\r\n        // return (\r\n        //    setLoading('en cours')\r\n        // )\r\n    }\r\n\r\n     return (\r\n        <>\r\n            <div style={{zIndex: props.openModal ? '-1' : '0'}} className=\"job__board__card\">\r\n                <div className=\"card__image__container\">\r\n                    {\r\n                        props.logo \r\n                        ? \r\n                        <>\r\n\r\n                            <img onLoad={handleImageLoaded} src={props.logo} alt={props.logo} /> \r\n                           \r\n                        </>\r\n                        : \r\n                        <div className=\"no-logo\">N / A</div> \r\n                    }\r\n                </div>\r\n                <p className=\"card__time-type\">\r\n                    <span className=\"card__time\">{props.created}</span>\r\n                    <span style={{margin: \"0 10px\"}}>•</span>\r\n                    <span className=\"card__type\">{props.type}</span>\r\n                </p>\r\n            \r\n                <Link to={`/job/${props.id}`} props={props}><h3 className=\"card__title\">{props.title}</h3></Link> \r\n                <span className=\"card__company\">{props.company}</span>\r\n                <h4 className=\"card__location\">{props.location}</h4>\r\n            </div>\r\n        </>\r\n      \r\n    );\r\n};\r\n\r\nexport default JobCard;\r\n\r\n\r\n","const time = (now, previous) => {\r\n\r\n    let msPerMinute = 60 * 1000,\r\n        msPerHour = msPerMinute * 60,\r\n        msPerDay = msPerHour * 24,\r\n        msPerMonth = msPerDay * 30,\r\n        msPerYear = msPerMonth * 365,\r\n        elapsed = now - previous;\r\n\r\n    if (elapsed < msPerMinute) {\r\n        return Math.round(elapsed / 1000) + ` seconds ago`; \r\n    } else if (elapsed < msPerHour){\r\n        return Math.round(elapsed / msPerHour) !== 1 \r\n            ? Math.round(elapsed / msPerMinute) + ` minutes ago`   \r\n            : Math.round(elapsed / msPerMinute) + ` minute ago`;\r\n    } else if (elapsed < msPerDay){\r\n        return Math.round(elapsed / msPerHour) !== 1\r\n            ? Math.round(elapsed / msPerHour) + ' hours ago'\r\n            : Math.round(elapsed / msPerHour) + ' hour ago'\r\n    } else if (elapsed < msPerMonth){\r\n        return Math.round(elapsed / msPerDay) !== 1     \r\n            ? Math.round(elapsed / msPerDay) + ' days ago'\r\n            : Math.round(elapsed / msPerDay) + ' day ago'\r\n    } else {\r\n        return Math.round(elapsed / msPerYear) !== 1\r\n            ? Math.round(elapsed / msPerYear) + ' years ago'\r\n            : Math.round(elapsed / msPerYear) + ' year ago'\r\n    }\r\n}\r\n\r\nexport default time;"," import React from 'react';\r\n \r\n const SkeletonElement = ( {type, typeLoader} ) => {\r\n\r\n    const classes = `skeleton__${typeLoader}__${type}`;\r\n\r\n     return (\r\n         <div className={classes}></div>\r\n     );\r\n };\r\n \r\n export default SkeletonElement;","import React from 'react';\r\nimport SkeletonElement from './SkeletonElement';\r\n\r\nconst SkeletonHome = () => {\r\n\r\n    return (\r\n        <div className=\"skeleton\">\r\n            <div className=\"skeleton__home\">\r\n                <SkeletonElement typeLoader = \"home\" type = \"logo\" />\r\n                <SkeletonElement typeLoader = \"home\" type = \"text1\" />\r\n                <SkeletonElement typeLoader = \"home\" type = \"title\" />\r\n                <SkeletonElement typeLoader = \"home\" type = \"text2\" />\r\n                <SkeletonElement typeLoader = \"home\" type = \"text3\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkeletonHome;","import React, {useState, useEffect } from 'react';\r\nimport SearchBar from '../components/SearchBar';\r\nimport JobCard from '../components/JobCard';\r\nimport axios from 'axios';\r\nimport Button from '../components/Button';\r\nimport time from '../components/utils/time';\r\n\r\nimport SkeletonHome from '../components/skeletons/SkeletonHome';\r\n\r\n\r\n\r\nconst Home = ( {darkMode, setDarkMode, openModal, setOpenModal} ) => {\r\n\r\n    const [data, setData] = useState([]);                   \r\n    const [loading, setLoading] = useState(false);         \r\n    const [error, setError] = useState(null);\r\n    const [anotherPage, setAnotherPage] = useState(1);\r\n    const [description, setDescription] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [fullTime, setFullTime] = useState(false);\r\n    const [final, setFinal] = useState({description: '', location: '', fullTime: ''})\r\n\r\n    const URL_BASE = 'https://cors.bridged.cc/https://jobs.github.com/positions.json';\r\n    const URL_FILTER = `${URL_BASE}?description=${final.description}&location=${final.location}&full_time=${final.fullTime}&page=${anotherPage}`;\r\n\r\n    // == Call API\r\n    useEffect(() => {    \r\n        setLoading(true);\r\n        let jobs = [...data];\r\n\r\n        // == FILTER\r\n        (final.description || final.location || final.fullTime !== '') \r\n        ?   axios.get(`${URL_FILTER}`)\r\n            .then(res => {\r\n                anotherPage === 1 ? jobs = [] : jobs = [...data];\r\n                res.data.forEach(job => {\r\n                    jobs.push(job);\r\n                    console.log(jobs);\r\n                });\r\n                setData(jobs);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                setError(error);\r\n                setLoading(false);\r\n            }) \r\n        // == Full PAGE\r\n        :   axios.get(`${URL_BASE}?page=${anotherPage}`)\r\n            .then(res => {\r\n                res.data.forEach(job => { \r\n                if(jobs.findIndex(j => j.id === job.id ) === -1) jobs.push(job)     \r\n            });\r\n\r\n            setData(jobs);\r\n            setLoading(false);\r\n        })\r\n        .catch(error => {\r\n            setError(error);\r\n            setLoading(false);\r\n        }) \r\n    }, [anotherPage, final])\r\n        \r\n  \r\n    //  == Load next page\r\n    const loadMore = () => {\r\n        setAnotherPage(anotherPage + 1 )\r\n        setLoading(true)\r\n    }\r\n   \r\n   \r\n    // == Search Final\r\n    const finalSearch = (e) => {\r\n        e.preventDefault()\r\n        setFinal({\r\n            description: description,\r\n            location: location,\r\n            fullTime: fullTime ? \"on\" : \"off\"\r\n        })\r\n        setDescription('');\r\n        setLocation('');\r\n        setFullTime('');\r\n    }\r\n    \r\n    // == Reset filter \r\n    const handleResetFilter = (description, location, fullTime) => {\r\n        setFinal({\r\n            description : description,\r\n            location: location,\r\n            fullTime: fullTime \r\n        })\r\n        setAnotherPage(1)\r\n    }\r\n\r\n    return (\r\n        <div className=\"home__page\">\r\n            <SearchBar \r\n                darkMode={darkMode} setDarkMode={setDarkMode}\r\n                description = {description}\r\n                location = {location}\r\n                fullTime = {fullTime}\r\n                setDescription = {setDescription}\r\n                setLocation = {setLocation}\r\n                setFullTime = {setFullTime}\r\n                openModal= {openModal}\r\n                setOpenModal = {setOpenModal}\r\n                finalSearch = {finalSearch}\r\n            />\r\n\r\n                <div className=\"page__filter\">\r\n                    {\r\n                        final.description && \r\n                        <span \r\n                            onClick={() => handleResetFilter('', final.location, final.fullTime)}\r\n                            >{final.description + ' x'}\r\n                        </span>\r\n                    }\r\n                    {\r\n                        final.location && \r\n                        <span \r\n                            onClick={() => handleResetFilter(final.description, '', final.fullTime)}\r\n                            >{final.location + ' x'}\r\n                        </span>\r\n                    }\r\n                    {\r\n                        final.fullTime === \"on\" && \r\n                        <span \r\n                            onClick={() => handleResetFilter(final.description, final.location, \"off\")}\r\n                            >Only Full Time x\r\n                        </span>\r\n                    }\r\n                </div>\r\n       \r\n            <div className=\"page__jobBoard\">\r\n                {\r\n                    data.map(job => {\r\n                    return (\r\n                       \r\n                        <JobCard\r\n                            key = {job.id}\r\n                            id = {job.id}\r\n                            logo = {job.company_logo}\r\n                            created = {time(Date.now(), Date.parse(job.created_at))}\r\n                            type = {job.type}\r\n                            title = {job.title}\r\n                            company = {job.company}\r\n                            location = {job.location}\r\n                            openModal = {openModal}\r\n                        />     \r\n                    \r\n                    )})\r\n                }\r\n                {\r\n                    \r\n                    loading && [1,2,3,4,5,6].map(n => <SkeletonHome key={n} />)\r\n\r\n                }\r\n            </div>\r\n            {\r\n                !loading && <Button typeBtn=\"loadMore\" clic={loadMore}>Load More</Button>    \r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport SkeletonElement from './SkeletonElement';\r\n\r\nconst SkeletonJob = () => {\r\n\r\n    return (\r\n        <div className=\"skeleton__job\">\r\n            <div className=\"skeleton__job__header\">\r\n                <SkeletonElement typeLoader = \"job\" type = \"logo\" />\r\n                <SkeletonElement typeLoader = \"job\" type = \"text1\" />\r\n                <SkeletonElement typeLoader = \"job\" type = \"button1\" />\r\n            </div>\r\n            <div className=\"skeleton__job__body\">\r\n                <div className = \"skeleton__job__body__header\">\r\n                    <div>\r\n                        <SkeletonElement typeLoader = \"job\" type = \"text2\" />\r\n                        <SkeletonElement typeLoader = \"job\" type = \"text3\" />\r\n                        <SkeletonElement typeLoader = \"job\" type = \"text4\" />\r\n                    </div>\r\n                    <SkeletonElement typeLoader = \"job\" type = \"button2\" />\r\n                </div>\r\n                <div className=\"skeleton__job__body__content\">\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"skeleton__job__footer\">\r\n                <SkeletonElement typeLoader = \"job\" type = \"text2\" />\r\n                <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkeletonJob;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Button from '../components/Button';\r\nimport time from '../components/utils/time';\r\nimport SkeletonJob from '../components/skeletons/skeletonJob';\r\n\r\nconst Job = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [job, setJob] = useState('');\r\n\r\n    const { match : { params } } = props\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios.get(`https://cors.bridged.cc/https://jobs.github.com/positions/${params.id}.json?`)\r\n        .then(res => {\r\n            setJob(res.data);\r\n            setLoading(false)\r\n        })\r\n      \r\n    }, [params.id])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"job__details\">\r\n                {\r\n                    loading \r\n                    ? <SkeletonJob /> \r\n                    : \r\n                    <>\r\n                        {/* HEADER */}\r\n                        <div className=\"job__details__header\">\r\n                            <div className=\"header__image__container\">\r\n                                {job.company_logo && <img src={job.company_logo} alt=\"logo company\" /> }\r\n                                {!job.company_logo && <div className=\"no-logo\">N / A</div> }\r\n                            </div>\r\n                            <div className=\"header__textbox\">\r\n                                <div className=\"header__textbox__inner\">\r\n                                    <h2 className=\"header__textbox__heading\">{job.company}</h2>\r\n                                    <p className=\"header__textbox__site\">{job.company_url}</p> \r\n                                </div>\r\n                                <a href={job.company_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    <Button typeBtn=\"companySite\">Company Site</Button>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        {/* BODY */}\r\n                        <div className=\"job__details__body\">\r\n                            <div className=\"body__heading__content\">\r\n                                <div className=\"body__heading__time__content\">\r\n                                    <p>\r\n                                        <span className=\"body__heading__time\">{time(Date.now(), Date.parse(job.created_at))}</span>\r\n                                        <span style={{margin: \"0 10px\"}}>•</span>\r\n                                        <span className=\"body__heading__type\">{job.type}</span>\r\n                                    </p>\r\n                                    <h2 className=\"body__heading__title\">{job.title}</h2>\r\n                                    <p className=\"body__heading__location\">{job.location}</p>\r\n                                </div>\r\n                                <a  href=\"#5\" className=\"body__heading__redirect btn\"  target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    <Button typeBtn=\"applyNow\">Apply Now</Button>\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"body__main\" dangerouslySetInnerHTML={{__html: job.description}} />\r\n                        </div>\r\n                        {/* APPLY */}\r\n                        <div className=\"job__details__apply\">\r\n                            <h3>How to apply</h3>\r\n                            <div dangerouslySetInnerHTML={{__html: job.how_to_apply}} />\r\n                        </div>    \r\n                    </>           \r\n                }\r\n            </div>\r\n        </>\r\n     );\r\n};\r\n\r\nexport default Job;","import React, { useState } from 'react';\nimport { BrowserRouter,Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport Job from './pages/Job';\n\n\nconst App = () => {\n\n\tconst [darkMode, setDarkMode] = useState(localStorage.getItem('theme') === 'light' ? true : false);\n\n\tconsole.log(darkMode);\n\tconsole.log(localStorage);\n\n  return (\n    <BrowserRouter basename=\"/FEM-Github-jobs-API\" >\n\t\t<Header darkMode={darkMode} setDarkMode={setDarkMode}/>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\">\n\t\t\t\t<Home darkMode={darkMode} setDarkMode={setDarkMode} />\n\t\t\t</Route>\n\t\t\t<Route path=\"/job/:id\" component={Job} />\n\t\t</Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './Styles/settings/styles.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}