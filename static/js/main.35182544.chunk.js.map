{"version":3,"sources":["assets/desktop/icon-sun.svg","assets/desktop/icon-moon.svg","components/Header.js","assets/desktop/icon-search.svg","assets/desktop/icon-location.svg","assets/mobile/icon-filter.svg","components/Button.js","components/SearchBar.js","components/JobCard.js","components/utils/time.js","components/skeletons/SkeletonElement.js","components/skeletons/SkeletonHome.js","pages/Home.js","components/skeletons/skeletonJob.js","pages/Job.js","App.js","index.js"],"names":["Header","darkMode","setDarkMode","htmlTag","document","body","parentElement","console","log","useEffect","localStorage","getItem","setAttribute","setItem","className","src","Sun","alt","type","id","value","onClick","htmlFor","Moon","Button","children","clic","typeBtn","css","SearchBar","description","location","fullTime","finalSearch","setDescription","setLocation","setFullTime","isTabletOrMobil","useMediaQuery","query","isMobil","iconSearch","placeholder","onChange","e","target","iconLocation","name","checked","hidden","iconFilter","style","marginLeft","Card","props","useState","loading","setLoading","logo","onLoad","created","margin","to","title","company","time","now","previous","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","Math","round","SkeletonElement","typeLoader","classes","SkeletonHome","Home","data","setData","setError","anotherPage","setAnotherPage","final","setFinal","URL_BASE","URL_FILTER","jobs","axios","get","then","res","forEach","job","push","catch","error","findIndex","j","preventDefault","map","JobCard","company_logo","Date","parse","created_at","n","SkeletonJob","Job","setJob","params","match","company_url","href","rel","dangerouslySetInnerHTML","__html","how_to_apply","App","basename","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.35182544.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-sun.9422c153.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.038e80ca.svg\";","import React, { useEffect }  from 'react';\r\nimport Sun from '../assets/desktop/icon-sun.svg';\r\nimport Moon from '../assets/desktop/icon-moon.svg';\r\n\r\nconst Header = ( {darkMode, setDarkMode }) => {\r\n\r\n    const htmlTag = document.body.parentElement;\r\n    console.log(htmlTag);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('theme')) {\r\n            setDarkMode(true)\r\n            localStorage.setItem('theme', 'light')\r\n            htmlTag.setAttribute('data-theme', 'light')\r\n        } else {\r\n            htmlTag.setAttribute('data-theme', localStorage.getItem('theme'))\r\n        }\r\n    }, [])\r\n\r\n    const switchTheme = () => {\r\n        if (!darkMode) {\r\n            localStorage.setItem('theme', 'dark')\r\n            htmlTag.setAttribute('data-theme', localStorage.getItem('theme'))\r\n            setDarkMode(true)\r\n        } else {\r\n            localStorage.setItem('theme', 'light')\r\n            htmlTag.setAttribute('data-theme', localStorage.getItem('theme'))\r\n            setDarkMode(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"header\" >\r\n                <p className=\"header__title\">devjobs</p>\r\n                <div className=\"header__toggle\">\r\n                    <img src={Sun} alt={Sun} />\r\n                    <div>\r\n                        <input type=\"checkbox\" className=\"checkbox\" id=\"dark-mode\" value={darkMode} onClick={() => switchTheme()} />\r\n                        <label htmlFor=\"dark-mode\" className=\"label\">\r\n                            <div className=\"ball\"></div>\r\n                        </label>\r\n                    </div>\r\n                   \r\n                    <img src={Moon} alt={Moon}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/icon-search.09900c2e.svg\";","export default __webpack_public_path__ + \"static/media/icon-location.325ff3d9.svg\";","export default __webpack_public_path__ + \"static/media/icon-filter.2471816d.svg\";","import React from 'react';\r\n\r\nconst Button = ( {children, clic, typeBtn }) => {\r\n\r\n    const css = `button ${typeBtn}`;\r\n\r\n    return (\r\n        <>\r\n            <button type=\"submit\" className={css} onClick={clic}>{children}</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport iconSearch from '../assets/desktop/icon-search.svg';\r\nimport iconLocation from '../assets/desktop/icon-location.svg';\r\nimport iconFilter from '../assets/mobile/icon-filter.svg';\r\nimport Button from '../components/Button';\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nconst SearchBar = ( {description, location, fullTime, finalSearch, setDescription, setLocation, setFullTime, darkMode }) => {\r\n\r\n    // == location and fullTime none\r\n    const isTabletOrMobil = useMediaQuery({ query: '(max-width: 1110px)' });\r\n    const isMobil = useMediaQuery({ query: '(max-width: 689px)' });\r\n\r\n    console.log(fullTime);\r\n\r\n    return (\r\n        <div className=\"searchBar\">\r\n            <div className=\"searchBar__description\">\r\n                {isMobil ? null : <img src={iconSearch} onClick={finalSearch}  alt=\"icon Search\"/>}\r\n                <input \r\n                    type=\"text\"  \r\n                    placeholder={isTabletOrMobil ? \"Filter by title ...\" : \"Filter by title, companies, expertise ...\"}\r\n                    value={description} \r\n                    onChange={(e) => setDescription(e.target.value)} \r\n                />\r\n                {/* {isMobil ? null : <img src={iconSearch} alt=\"icon Search\"/>} */}\r\n\r\n            </div>\r\n            <div className=\"searchBar__location\">\r\n                <img src={iconLocation} alt=\"icon Location\"/>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Filter by location ...\"  \r\n                    value={location} \r\n                    onChange={(e) => setLocation(e.target.value)} \r\n                />\r\n            </div>\r\n            <div className=\"searchBar__fullTime\">\r\n              \r\n                <label htmlFor=\"fullTime\" name=\"fullTime\">\r\n                <input \r\n                    type=\"checkbox\" \r\n                    id=\"fullTime\" \r\n                    checked={fullTime} \r\n                    onChange={(e) => setFullTime(e.target.checked)}  \r\n                    hidden\r\n                />\r\n                    {/* <div className={`${fullTime && \"checked\" }`}></div> */}\r\n                    <div></div>\r\n                    <span>{isTabletOrMobil ? \"Full Time\" : \"Full Time Only\"}</span>\r\n                </label>\r\n                {\r\n                    isMobil ? \r\n                    <>\r\n                        <img src={iconFilter} alt=\"icon filter\"/>\r\n                        <img src={iconSearch} style={{marginLeft : '1.5rem'}} onClick={finalSearch}  alt=\"icon Search\"/>\r\n                    </>\r\n\r\n                    : <Button clic={finalSearch} typeBtn=\"search\">Search</Button> \r\n                }\r\n            </div>\r\n           \r\n           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Card = (props) => {\r\n    \r\n    const [loading, setLoading] = useState('loading')\r\n   \r\n    const handleImageLoaded = () => {\r\n        setLoading(\"loaded\")\r\n      }\r\n\r\n     \r\n\r\n    return (\r\n        <>\r\n            <div className=\"job__board__card\">\r\n                <div className=\"card__image__container\">\r\n                    {\r\n                        props.logo \r\n                        ? \r\n                        <>\r\n                            <img onLoad={handleImageLoaded} src={props.logo} alt={props.logo} /> \r\n                            {loading}\r\n                        </>\r\n                        : \r\n                        <div className=\"no-logo\">N / A</div> \r\n                    }\r\n                </div>\r\n                <p className=\"card__time-type\">\r\n                    <span className=\"card__time\">{props.created}</span>\r\n                    <span style={{margin: \"0 10px\"}}>•</span>\r\n                    <span className=\"card__type\">{props.type}</span>\r\n                </p>\r\n            \r\n                <Link to={`/job/${props.id}`} props={props}><h3 className=\"card__title\">{props.title}</h3></Link> \r\n                <span className=\"card__company\">{props.company}</span>\r\n                <h4 className=\"card__location\">{props.location}</h4>\r\n            </div>\r\n        </>\r\n      \r\n    );\r\n};\r\n\r\nexport default Card;\r\n\r\n\r\n","const time = (now, previous) => {\r\n\r\n    let msPerMinute = 60 * 1000,\r\n        msPerHour = msPerMinute * 60,\r\n        msPerDay = msPerHour * 24,\r\n        msPerMonth = msPerDay * 30,\r\n        msPerYear = msPerMonth * 365,\r\n        elapsed = now - previous;\r\n\r\n    if (elapsed < msPerMinute) {\r\n        return Math.round(elapsed / 1000) + ` seconds ago`; \r\n    } else if (elapsed < msPerHour){\r\n        return Math.round(elapsed / msPerHour) !== 1 \r\n            ? Math.round(elapsed / msPerMinute) + ` minutes ago`   \r\n            : Math.round(elapsed / msPerMinute) + ` minute ago`;\r\n    } else if (elapsed < msPerDay){\r\n        return Math.round(elapsed / msPerHour) !== 1\r\n            ? Math.round(elapsed / msPerHour) + ' hours ago'\r\n            : Math.round(elapsed / msPerHour) + ' hour ago'\r\n    } else if (elapsed < msPerMonth){\r\n        return Math.round(elapsed / msPerDay) !== 1     \r\n            ? Math.round(elapsed / msPerDay) + ' days ago'\r\n            : Math.round(elapsed / msPerDay) + ' day ago'\r\n    } else {\r\n        return Math.round(elapsed / msPerYear) !== 1\r\n            ? Math.round(elapsed / msPerYear) + ' years ago'\r\n            : Math.round(elapsed / msPerYear) + ' year ago'\r\n    }\r\n}\r\n\r\nexport default time;"," import React from 'react';\r\n \r\n const SkeletonElement = ( {type, typeLoader} ) => {\r\n\r\n    const classes = `skeleton__${typeLoader}__${type}`;\r\n\r\n     return (\r\n         <div className={classes}></div>\r\n     );\r\n };\r\n \r\n export default SkeletonElement;","import React from 'react';\r\nimport SkeletonElement from './SkeletonElement';\r\n\r\nconst SkeletonHome = () => {\r\n\r\n    return (\r\n        <div className=\"skeleton\">\r\n            <div className=\"skeleton__home\">\r\n                <SkeletonElement typeLoader = \"home\" type = \"logo\" />\r\n                <SkeletonElement typeLoader = \"home\" type = \"text1\" />\r\n                <SkeletonElement typeLoader = \"home\" type = \"title\" />\r\n                <SkeletonElement typeLoader = \"home\" type = \"text2\" />\r\n                <SkeletonElement typeLoader = \"home\" type = \"text3\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkeletonHome;","import React, {useState, useEffect } from 'react';\r\nimport SearchBar from '../components/SearchBar';\r\nimport JobCard from '../components/JobCard';\r\nimport axios from 'axios';\r\nimport Button from '../components/Button';\r\nimport time from '../components/utils/time';\r\n\r\nimport SkeletonHome from '../components/skeletons/SkeletonHome';\r\n\r\n\r\n\r\nconst Home = ( {darkMode, setDarkMode} ) => {\r\n\r\n    const [data, setData] = useState([]);                   \r\n    const [loading, setLoading] = useState(false);         \r\n    const [error, setError] = useState(null);\r\n    const [anotherPage, setAnotherPage] = useState(1);\r\n    const [description, setDescription] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [fullTime, setFullTime] = useState(false);\r\n    const [final, setFinal] = useState({description: '', location: '', fullTime: ''})\r\n    const URL_BASE = 'https://cors.bridged.cc/https://jobs.github.com/positions.json';\r\n    const URL_FILTER = `${URL_BASE}?description=${final.description}&location=${final.location}&full_time=${final.fullTime}`\r\n\r\n    // == Call API\r\n    useEffect(() => {    \r\n        setLoading(true);\r\n        let jobs = [...data];\r\n\r\n        // == FILTER\r\n        (final.description || final.location || final.fullTime !== '') \r\n        ?   axios.get(`${URL_FILTER}`)\r\n            .then(res => {\r\n                jobs = [];\r\n                res.data.forEach(job => {\r\n                    jobs.push(job)\r\n                });\r\n                setData(jobs)\r\n                setLoading(false)\r\n            })\r\n            .catch(error => {\r\n                setError(error);\r\n                setLoading(false);\r\n            }) \r\n        // == Full PAGE\r\n        :   axios.get(`${URL_BASE}?page=${anotherPage}`)\r\n            .then(res => {\r\n                res.data.forEach(job => { \r\n                if(jobs.findIndex(j => j.id === job.id ) === -1) jobs.push(job)     \r\n            });\r\n\r\n            setData(jobs)\r\n            setLoading(false)\r\n        })\r\n        .catch(error => {\r\n            setError(error);\r\n            setLoading(false);\r\n        }) \r\n    }, [anotherPage, final])\r\n        \r\n  \r\n    //  == Load next page\r\n    const loadMore = () => {\r\n        setAnotherPage(anotherPage + 1 )\r\n        setLoading(true)\r\n    }\r\n   \r\n\r\n    // == Search Final\r\n    const finalSearch = (e) => {\r\n        e.preventDefault()\r\n        setFinal({\r\n            description: description,\r\n            location: location,\r\n            fullTime: fullTime ? \"on\" : \"off\"\r\n        })\r\n        setDescription('');\r\n        setLocation('');\r\n        setFullTime('');\r\n    }\r\n    \r\n    return (\r\n        <div className=\"home__page\">\r\n            <SearchBar \r\n                darkMode={darkMode} setDarkMode={setDarkMode}\r\n                description = {description}\r\n                location = {location}\r\n                fullTime = {fullTime}\r\n                setDescription = {setDescription}\r\n                setLocation = {setLocation}\r\n                setFullTime = {setFullTime}\r\n       \r\n                finalSearch = {finalSearch}\r\n            />\r\n\r\n            <div className=\"page__jobBoard\">\r\n                {\r\n                    data.map(job => {\r\n                    return (\r\n                       \r\n                        <JobCard\r\n                            key = {job.id}\r\n                            id = {job.id}\r\n                            logo = {job.company_logo}\r\n                            created = {time(Date.now(), Date.parse(job.created_at))}\r\n                            type = {job.type}\r\n                            title = {job.title}\r\n                            company = {job.company}\r\n                            location = {job.location}\r\n                        />                   \r\n                    )})\r\n                }\r\n                {\r\n                    \r\n                    loading && [1,2,3,4,5,6].map(n => <SkeletonHome key={n} />)\r\n\r\n                }\r\n            </div>\r\n            {\r\n                !loading && <Button typeBtn=\"loadMore\" clic={loadMore}>Load More</Button>    \r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport SkeletonElement from './SkeletonElement';\r\n\r\nconst SkeletonJob = () => {\r\n\r\n    return (\r\n        <div className=\"skeleton__job\">\r\n            <div className=\"skeleton__job__header\">\r\n                <SkeletonElement typeLoader = \"job\" type = \"logo\" />\r\n                <SkeletonElement typeLoader = \"job\" type = \"text1\" />\r\n                <SkeletonElement typeLoader = \"job\" type = \"button1\" />\r\n            </div>\r\n            <div className=\"skeleton__job__body\">\r\n                <div className = \"skeleton__job__body__header\">\r\n                    <div>\r\n                        <SkeletonElement typeLoader = \"job\" type = \"text2\" />\r\n                        <SkeletonElement typeLoader = \"job\" type = \"text3\" />\r\n                        <SkeletonElement typeLoader = \"job\" type = \"text4\" />\r\n                    </div>\r\n                    <SkeletonElement typeLoader = \"job\" type = \"button2\" />\r\n                </div>\r\n                <div className=\"skeleton__job__body__content\">\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                    <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"skeleton__job__footer\">\r\n                <SkeletonElement typeLoader = \"job\" type = \"text2\" />\r\n                <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                <SkeletonElement typeLoader = \"job\" type = \"text6\" />\r\n                <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n                <SkeletonElement typeLoader = \"job\" type = \"text5\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkeletonJob;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Button from '../components/Button';\r\nimport time from '../components/utils/time';\r\nimport SkeletonJob from '../components/skeletons/skeletonJob';\r\n\r\nconst Job = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [job, setJob] = useState('');\r\n\r\n    const { match : { params } } = props\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios.get(`https://cors.bridged.cc/https://jobs.github.com/positions/${params.id}.json?`)\r\n        .then(res => {\r\n            setJob(res.data);\r\n            setLoading(false)\r\n        })\r\n      \r\n    }, [params.id])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"job__details\">\r\n                {\r\n                    loading \r\n                    ? <SkeletonJob /> \r\n                    : \r\n                    <>\r\n                        {/* HEADER */}\r\n                        <div className=\"job__details__header\">\r\n                            <div className=\"header__image__container\">\r\n                                {job.company_logo && <img src={job.company_logo} alt=\"logo company\" /> }\r\n                                {!job.company_logo && <div className=\"no-logo\">N / A</div> }\r\n                            </div>\r\n                            <div className=\"header__textbox\">\r\n                                <div className=\"header__textbox__inner\">\r\n                                    <h2 className=\"header__textbox__heading\">{job.company}</h2>\r\n                                    <p className=\"header__textbox__site\">{job.company_url}</p> \r\n                                </div>\r\n                                <a href={job.company_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    <Button typeBtn=\"companySite\">Company Site</Button>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        {/* BODY */}\r\n                        <div className=\"job__details__body\">\r\n                            <div className=\"body__heading__content\">\r\n                                <div className=\"body__heading__time__content\">\r\n                                    <p>\r\n                                        <span className=\"body__heading__time\">{time(Date.now(), Date.parse(job.created_at))}</span>\r\n                                        <span style={{margin: \"0 10px\"}}>•</span>\r\n                                        <span className=\"body__heading__type\">{job.type}</span>\r\n                                    </p>\r\n                                    <h2 className=\"body__heading__title\">{job.title}</h2>\r\n                                    <p className=\"body__heading__location\">{job.location}</p>\r\n                                </div>\r\n                                <a  href=\"#5\" className=\"body__heading__redirect btn\"  target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    <Button typeBtn=\"applyNow\">Apply Now</Button>\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"body__main\" dangerouslySetInnerHTML={{__html: job.description}} />\r\n                        </div>\r\n                        {/* APPLY */}\r\n                        <div className=\"job__details__apply\">\r\n                            <h3>How to apply</h3>\r\n                            <div dangerouslySetInnerHTML={{__html: job.how_to_apply}} />\r\n                        </div>    \r\n                    </>           \r\n                }\r\n            </div>\r\n        </>\r\n     );\r\n};\r\n\r\nexport default Job;","import React, { useState } from 'react';\nimport { BrowserRouter,Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport Job from './pages/Job';\n\n\nconst App = () => {\n\nconst [darkMode, setDarkMode] = useState(false)\n\n  return (\n    <BrowserRouter basename=\"/FEM-Github-jobs-API\" >\n\t\t<Header darkMode={darkMode} setDarkMode={setDarkMode}/>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\">\n\t\t\t\t<Home darkMode={darkMode} setDarkMode={setDarkMode} />\n\t\t\t</Route>\n\t\t\t<Route path=\"/job/:id\" component={Job} />\n\t\t</Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './Styles/settings/styles.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}